// <auto-generated />
using System;
using DeliveryApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DeliveryApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250608104010_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("DeliveryApp.Models.Fees.Fees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("ColdATEF")
                        .HasColumnType("REAL");

                    b.Property<double>("FreezingATEF")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<double>("RBF")
                        .HasColumnType("REAL");

                    b.Property<double>("RainEF")
                        .HasColumnType("REAL");

                    b.Property<double>("SnowEF")
                        .HasColumnType("REAL");

                    b.Property<string>("Vehicle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("WSEF")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Fees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Tallinn",
                            ColdATEF = 0.5,
                            FreezingATEF = 1.0,
                            Modified = new DateTime(2025, 6, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            RBF = 3.5,
                            RainEF = 0.5,
                            SnowEF = 1.0,
                            Vehicle = "Scooter",
                            WSEF = 0.0
                        },
                        new
                        {
                            Id = 2,
                            City = "Tallinn",
                            ColdATEF = 0.5,
                            FreezingATEF = 1.0,
                            Modified = new DateTime(2025, 6, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            RBF = 3.0,
                            RainEF = 0.5,
                            SnowEF = 1.0,
                            Vehicle = "Bike",
                            WSEF = 0.5
                        },
                        new
                        {
                            Id = 3,
                            City = "Tallinn",
                            ColdATEF = 0.0,
                            FreezingATEF = 0.0,
                            Modified = new DateTime(2025, 6, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            RBF = 4.0,
                            RainEF = 0.0,
                            SnowEF = 0.0,
                            Vehicle = "Car",
                            WSEF = 0.0
                        },
                        new
                        {
                            Id = 4,
                            City = "Tartu",
                            ColdATEF = 0.5,
                            FreezingATEF = 1.0,
                            Modified = new DateTime(2025, 6, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            RBF = 3.0,
                            RainEF = 0.5,
                            SnowEF = 1.0,
                            Vehicle = "Scooter",
                            WSEF = 0.0
                        },
                        new
                        {
                            Id = 5,
                            City = "Tartu",
                            ColdATEF = 0.5,
                            FreezingATEF = 1.0,
                            Modified = new DateTime(2025, 6, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            RBF = 2.5,
                            RainEF = 0.5,
                            SnowEF = 1.0,
                            Vehicle = "Bike",
                            WSEF = 0.5
                        },
                        new
                        {
                            Id = 6,
                            City = "Tartu",
                            ColdATEF = 0.0,
                            FreezingATEF = 0.0,
                            Modified = new DateTime(2025, 6, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            RBF = 3.5,
                            RainEF = 0.0,
                            SnowEF = 0.0,
                            Vehicle = "Car",
                            WSEF = 0.0
                        },
                        new
                        {
                            Id = 7,
                            City = "Pärnu",
                            ColdATEF = 0.5,
                            FreezingATEF = 1.0,
                            Modified = new DateTime(2025, 6, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            RBF = 2.5,
                            RainEF = 0.5,
                            SnowEF = 1.0,
                            Vehicle = "Scooter",
                            WSEF = 0.0
                        },
                        new
                        {
                            Id = 8,
                            City = "Pärnu",
                            ColdATEF = 0.5,
                            FreezingATEF = 1.0,
                            Modified = new DateTime(2025, 6, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            RBF = 2.0,
                            RainEF = 0.5,
                            SnowEF = 1.0,
                            Vehicle = "Bike",
                            WSEF = 0.5
                        },
                        new
                        {
                            Id = 9,
                            City = "Pärnu",
                            ColdATEF = 0.0,
                            FreezingATEF = 0.0,
                            Modified = new DateTime(2025, 6, 8, 0, 0, 0, 0, DateTimeKind.Local),
                            RBF = 3.0,
                            RainEF = 0.0,
                            SnowEF = 0.0,
                            Vehicle = "Car",
                            WSEF = 0.0
                        });
                });

            modelBuilder.Entity("DeliveryApp.Models.Weather.WeatherCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("AirTemperature")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("TimeStamp")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WeatherPhenomenon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("WindSpeed")
                        .HasColumnType("REAL");

                    b.Property<long?>("WmoCode")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("WeatherConditions");
                });
#pragma warning restore 612, 618
        }
    }
}
